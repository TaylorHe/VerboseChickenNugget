Test cases don't account for negative numbers,
only what was required in the Hackerrank spec.

* test 2, 3, and 4 are specially handled in that
they are given a text file as an input argument
The program reads the file's contents to 
pass as an argument to the solve function.
This is because it would be infeasible to type out 
200,000 digits, the max as specified by the 
hackerrank problem.
==================================================

----------Test 1-------------
python substrings.py 1
1
-----------------------------


----------Test 2-------------
Test 2 solves the problem for 9999...9999, 
nines that repeat 200,000 times.


python substrings.py test_two_hundred_thousand_9s.txt
879633365
-----------------------------


----------Test 3-------------
Test 3 solves the problem for a repeating pattern of 
1234567890 1234567890 1234567890... 
with two hundred thousand digits in the number.


python substrings.py test_increasing.txt 
673255765
-----------------------------


----------Test 4-------------
Test 4 solves the problem for the first 200,000
digits of pi starting at after the decimal place
141592653589...
source: http://digitsofpi.com/Top-200000-Digits-Of-Pi.htm


python substrings.py test_pi.txt 
637287581
-----------------------------


----------Test 5-------------
python substrings.py 1234567890
676573528
-----------------------------


----------Test 6-------------
python substrings.py 16
23
-----------------------------


----------Test 7-------------
python substrings.py 123
164
-----------------------------


----------Test 8-------------
python substrings.py 8734
10557
-----------------------------


----------Test 9-------------
python substrings.py 987654321
204084718
-----------------------------


----------Test 10------------
python substrings.py 9876543210
40847331
-----------------------------

